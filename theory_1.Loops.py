# ГЛАВНАЯ БАЗА:
end= переводится как "в конце поставь вот это" 
\t переводится как "ТАБ" (каждое окончание записи будет ставить ТАБ) = ПРОМНОЖИЛИ СТРОКУ: РЕЗУЛЬТАТ - ТАБ; РЕЗУЛЬТАТ - ТАБ
\n переводится как "ПЕРЕСКОКНИ НА СЛЕДУЮЩУЮ СТРОКУ" (ДАННОЕ ТЕЛО ЦИКЛА ОТНОСИТСЯ К while i < 10;)

___________________________________________________________________________________________-
#ЦИКЛЫ В ПИТОНЕ: While, for + тернарные 
#Циклы в питоне работают на основе true/false. Если true цикл продолжется. Если ложь, то цикл прекращает свою работу.

#1. WHILE (ПОКА/ ДЕЛАЙ ПОКА)
a = 5
n = 0

#Что бы этот цикл выполнялся то что написано до : (в скобках), должно возвращать true! (любое сравнение/какая-то НЕПУСТАЯ строка/ NOT NONE)
#while (_________):
  
while a < 10:
  print(a)
  
# Тут 5 будет писаться бесконечное кол-во раз, потому что здесь будет всегда ИСТИНА

while a < 10:
  print(n, ' == ', a)
  n+=1

# Тут с помощью n можно увидеть сколько раз успевает пройти цикл бесконечности a
#n+=1 это присвоение (т.е. каждый раз к 0 будет прибавляться 1 и затем присваиваться n). 2 операции в 1 строку: Прибавили значение и в переменную присвоили, чтобы эта переменная
#дальше по программе несла свое новое обновленное значение!

while a < 10:
  print(n, ' == ', a)
  a+=1
  n+=1

#Тут при добавлении присвоения к а проискодит увеличение а на 1 и как результат цикл теперь будет не бесконечный а пока а < 10 (т.е. выполняется условие) т.е. до 9.

# Результат: 0  ==  5
#            1  ==  6
#            2  ==  7
#            3  ==  8
#            4  ==  9

while a < 10:
  print(n, ' == ', a)
  a+=1
  n+=1
else:
  print(f'------- a == {a}')
 
# Когда закончится цикл и a перестанет быть меньше 10 тогда 
# тут в кавычках пишет что-нибудь, а в фигурных скобках можно вставить переменную, которая будет нести в себе значение {a}. Аналог записи: ('a ==', a)
# РЕЗУЛЬТАТ:

# 0  ==  5
# 1  ==  6
# 2  ==  7
# 3  ==  8
# 4  ==  9
# ------- a == 10 (СЛЕДУЮЩЕЕ 1 ЗНАЧЕНИЕ ИНАЧЕ Т.Е. 9+1 = 10)

while a <= 10:
  print(n, ' == ', a)
  a+=1
  n+=1
else:
  print(f'------- a == {a}')
  
# Тут также как и в предыдущем варианте, но результат будет до 10, а переменная а будет равна 11 (т.к. 10 + 1 = 11)
# РЕЗУЛЬТАТ:

# 0  ==  5
# 1  ==  6
# 2  ==  7
# 3  ==  8
# 4  ==  9
# 5  ==  10
# ------- a == 11

__________________________________________________________________________________________________________________________
# 2. FOR LOOP
#2.1. Механизм ИТЕРАТОР
message = 'Good Morning'

for m in message:
  print(m)

# есть какой-то тип данных в переменной message (строка) например и затем мы переменную m вкладываем в содержимое переменной message
# РЕЗУЛЬТАТ: 

# G
# o
# o
# d
 
# M
# o
# r
# n
# i
# n
# g

# ТАК КАК ЛЮБАЯ СТРОКА ЭТО СПИСОК СИМВОЛОВ (message приравняли к такой-то строке, потом m приравняли к message)

#СДЕЛАТЬ СЧЕТЧИК (RANGE) (НАПРИМЕР ЧТО БЫ ЦИКЛ FOR ВЫПОЛНИЛСЯ 10 РАЗ):
message = 'Good Morning'
for m in range (0, 10):
  print(m)
  
# РЕЗУЛЬТАТ:

# 0
# 1
# 2
# 3
# 4
# 5
# 6
# 7
# 8
# 9

# ИТЕРАТОР ЧЕРЕЗ 2 ШАГА (будет считать 0, 2, 4, 6, 8):
message = 'Good Morning'
for m in range (0, 10, 2):
  print(m)

#РЕЗУЛЬТАТ:

# 0
# 2
# 4
# 6
# 8

#FOR+ELSE

message = 'Good Morning'
for m in range (0, 10, 2):
  print(m)
else:
  print('End')
  
# РЕЗУЛЬТАТ:

# 0
# 2
# 4
# 6
# 8
# End
_________________________________________________________________________________________________________________________________
# ЗАДАЧИ

# ЗАДАЧА 1. ВЫВЕСТИ В КОНСОЛЬ ТАБЛИЦУ УМНОЖЕНИЯ (МАТРИЦУ)

i = 1
n = 1

#надо сделать что бы было написано: результат умножения - пробел - новая строчка - результат умножения - пробел и т.д. (проумножать 10 цифр)

while i < 10:
while n < 10:
  
  result = i * n
  
  print(result, end="\t")
  
  n += 1
  
# end= переводится как "в конце поставь вот это" 
# \t переводится как "ТАБ" (каждое окончание записи будет ставить ТАБ) = ПРОМНОЖИЛИ СТРОКУ: РЕЗУЛЬТАТ - ТАБ; РЕЗУЛЬТАТ - ТАБ

# i ИДЕТ ПО ГОРИЗОНТАЛИ
# n идет по ВЕРТИКАЛИ
# от result до n+=1 это тело цикла, которое принадлежит while n < 10

# ТЕПЕРЬ ЧТО БЫ БЫЛО ПО ВЕРТИКАЛИ НАДО 1, ПОТОМ 2 ПРОМНОЖИТЬ (В ПЕРВОМ ЦИКЛЕ while i < 10):

i += 1
n = 1
print("\n")

# \n переводится как "ПЕРЕСКОКНИ НА СЛЕДУЮЩУЮ СТРОКУ" (ДАННОЕ ТЕЛО ЦИКЛА ОТНОСИТСЯ К while i < 10;)

# КАК ИТОГ ПОЛНЫЙ КОД (ВСЕ ВМЕСТЕ С ОТСТУПАМИ И ВЛОЖЕННОСТЯМИ В ЦИКЛ):

i = 1
n = 1

while i < 10:
  while n < 10:
    result = i * n
    print(result, end="\t")
    n += 1

  i += 1
  n = 1
  print("\n")
  
# РЕЗУЛЬТАТ: 

# 1	2	3	4	5	6	7	8	9	

# 2	4	6	8	10	12	14	16	18	

# 3	6	9	12	15	18	21	24	27	

# 4	8	12	16	20	24	28	32	36	

# 5	10	15	20	25	30	35	40	45	

# 6	12	18	24	30	36	42	48	54	

# 7	14	21	28	35	42	49	56	63	

# 8	16	24	32	40	48	56	64	72	

# 9	18	27	36	45	54	63	72	81	
___________________________________________________________________

# Стопнуть цикл:
# 1. BREAK:

n = 0
while n < 5:
   n += 1
   print(' n-- ', n)

   if n == 3 :
     print(' n == ', 3)
     break
      
 #РЕЗУЛЬТАТ: 
 n--  1
 n--  2
 n--  3
 n ==  3

# Пока n меньше 5 цикл будет идти, если переменная будет строго равна 3 то цикл пишет то-то и заканчивается (break)

# 2. Continue (продолжить цикл после того, как он мог стопнуться):

n = 0
while n < 5:
   n += 1
   print(' n-- ', n)

   if n == 3 :
     print(' n == ', 3)
     continue
   print('Item n == ', n)
  
 # РЕЗУЛЬТАТ:

 n--  1
Item n ==  1
 n--  2
Item n ==  2
 n--  3
 n ==  3
 n--  4
Item n ==  4
 n--  5
Item n ==  5

# Тут даже после того как переменная приравнялась к 3 цикл продолжается, тк. есть CONTINUE
________________________
# ПРОИТЕРИРОВАТЬ СПИСОК ДАННЫХ (ЧЕРЕЗ ПРИСВОЕНИЕ К ПЕРЕМЕННОЙ):

ll = [1,4,7,9,2,3,56,87, 'ee', 'good', False, [33, 66], {'key 1': 'value1'}]

for i in ll:

    print(i)
    
 # РЕЗУЛЬТАТ:

1
4
7
9
2
3
56
87
ee
good
False
[33, 66]
{'key 1': 'value1'}

# Данный список: теперь найти какое-то значение из этого списка и в случает истины (найденного значения) что-то сделать:

ll = [1,4,7,9,2,3,56,87, 'ee', 'good', False, [33, 66], {'key 1': 'value1'}]

for i in ll:
    if i == 'good':
        print('good in list')
        break
        print(i)

# РЕЗУЛЬТАТ: 

1
4
7
9
2
3
56
87
ee
good in list

_____________________________________________________
# ПРОВЕРКА НА ТИП:

ll = [1,4,7,9,2,3,56,87, 'ee', 'good', False, [33, 66], {'key 1': 'value1'}]

for i in ll:
   if type(i) == list:
       print(1111)
 
# РЕЗУЛЬТАТ: 
1111

_____________________________________________

ll = [1,4,7,9,2,3,56,87, 'ee', 'good', False, [33, 66], {'key 1': 'value1'}]

for i in ll:
   if type(i) == list:
       for nn in i:
           print(nn)
            
# Тут мы из огромного списка хотим найти массив (list), который содержит 33, 66 (т.к. массив/ list в этом огромном перечислении у нас только 1 этот)
# После того как массив найден мы присваиваем новую переменную к найденному массиву (nn) и выводим ее в консоль

# РЕЗУЛЬТАТ:
33
66





  
